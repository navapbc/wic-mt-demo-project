name: Infrastructure CI
# the commented out bits should be refined for later so that terraform can be deployed programatically somehow

on:
  push:
    paths:
      - '**.tf'
  # workflow_dispatch:
  #   inputs:
  #     app:
  #       required: true
  #       type: choice
  #       options:
  #         - mock_api
  #         - eligibility_screener
  #     environment:
  #       required: true
  #       default_value: "test"
  #       options:
  #         - test
  #         - stage
  #         - prod
env:
  working-dir: ./infra
  # infra-path: ${{ inputs.app }}/environment/${{ inputs.environment }}

jobs:
  format:
    name: Format Terraform
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.0
          terraform_wrapper: false

      - name: Format Terraform
        run: |
          echo "run terraform fmt  -recursive ./infra if this fails"
          terraform fmt  -recursive -check  ${{ env.working-dir }}

  # verify-plan:
  #   name: Validate Terraform Plan
  #   runs-on: ubuntu-latest
  #   needs: [format]
    
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.2.0
  #         terraform_wrapper: false
      
  #     - name: Terraform Init
  #       run: terraform init
  #       working-directory: ${{ env.working-dir }}/${{ env.infra-path}}

  #     - name: Create Terraform execution plan
  #       run: |
  #         terraform validate
  #         terraform plan -out=plan.tfplan
  #       working-directory: ${{ env.working-dir }}/${{ env.infra-path}}
      
  #     - name: Apply from execution plan
  #       run: terraform apply plan.tfplan
  #       working-directory: ${{ env.working-dir }}/${{ env.infra-path}}
