# This docker compose file is ONLY used for local development and NOT for deploys.
version: '3'

services:
  eligibility-screener:
    build:
      context: ./eligibility-screener/app
    # Run in development mode
    command: ["yarn", "dev"]
    # Load environment variables for local development
    env_file: ./mock-api/app/local.env
    environment:
      - API_HOST=http://mock-api:8080
      - NEXT_PUBLIC_DEMO_MODE="false"
    # Fix running on Apple silicon
    platform: linux/amd64
    ports:
      # Expose a port to access the application.
      - 3000:3000
      # Expose a port for storybook.
      - 6006:6006
    volumes:
      # Use a named volume for the node_modules so that the container uses the guest machine's node_modules dir instead of the host machine's node_modules directory, which might be divergent.
      - nextjs_nodemodules:/srv/node_modules

  mock-api-db:
    image: postgres:14-alpine
    # Docs for options to the postgres server command:
    # https://www.postgresql.org/docs/current/app-postgres.html
    command: postgres -c "log_lock_waits=on" -N 1000 -c "fsync=off"
    # Load environment variables for local development. 
    env_file: ./mock-api/app/local.env
    # Fix running on Apple silicon
    platform: linux/amd64
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data

  mock-api:
    build:
      context: ./mock-api/app
    # Load environment variables for local development
    env_file: ./mock-api/app/local.env
    # NOTE: These values take precedence if the same value is specified in the env_file.
    environment:
      # The env_file defines DB_HOST=localhost for accessing a non-dockerized database. 
      # In the docker-compose, we tell the app to use the dockerized database service 
      - DB_HOST=mock-api-db
    # Fix running on Apple silicon
    platform: linux/amd64
    # Expose the application port for local development.
    ports: 
      - 8080:8080
    depends_on:
      - mock-api-db

volumes:
  db_data:
  nextjs_nodemodules:
